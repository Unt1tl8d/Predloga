import sqlite3
import time
from aiogram.utils.media_group import MediaGroupBuilder
from aiogram import types, Router, Bot
from data import config
from aiogram.enums import ParseMode
from aiogram.types import ReplyKeyboardRemove, Message
from keybord import Inlinekbord, kbord 
from handlers import us_command


Bot = Bot(config.token)
rout = Router()
db = sqlite3.connect('data\content.db')
cur = db.cursor()


async def last_msg(callback):
    await Bot.edit_message_text(text=f'–ó–∞–≥—Ä—É–∂–∞—é', chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    time.sleep(2)
    await Bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
    await Bot.send_message(text=f'–¢–µ–ø–µ—Ä—å –Ω–∞–¥–æ –Ω–µ–º–Ω–æ–∂–∫–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ –º—ã –≤—Å–µ –∑–∞–ø–æ—Å—Ç–∏–ºüòòüòòüòò', chat_id=callback.message.chat.id, reply_markup=ReplyKeyboardRemove())
    await Bot.send_message(text=f'@{callback.from_user.username} —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –±–æ—Ç?\n(–≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç 10 –±–∞–ª—å–Ω–∞—è —à–∫–∞–ª–∞)', chat_id=callback.message.chat.id, reply_markup=Inlinekbord.reit())


async def find_cont(callback):
    msgid = callback.message.message_id
    cur.execute(f"SELECT * FROM save_content ORDER BY caption DESC")
    items = cur.fetchall()
    for i in items:
        if i[0] == msgid - 1:
            items = i
        if i[0] == msgid - 2:
            items = i
        if i[0] == msgid - 3:
            items = i
        if i[0] == msgid - 4:
            items = i
        if i[0] == msgid - 5:
            items = i
        if i[0] == msgid - 6:
            items = i
        if i[0] == msgid - 7:
            items = i
        if i[0] == msgid - 8:
            items = i
        if i[0] == msgid - 9:
            items = i
        if i[0] == msgid - 10:
            items = i
        if i[0] == msgid - 11:
            items = i
        if i[0] == msgid - 12:
            items = i
        if i[0] == msgid - 13:
            items = i
    return items


async def find_messager(callback):
    msgid = callback.message.message_id
    cur.execute(f"SELECT * FROM save_partner ORDER BY caption DESC")
    items = cur.fetchall()
    for i in items:
        if i[0] == msgid - 1:
            items = i
        if i[0] == msgid - 2:
            items = i
        if i[0] == msgid - 3:
            items = i
        if i[0] == msgid - 4:
            items = i
        if i[0] == msgid - 5:
            items = i
        if i[0] == msgid - 6:
            items = i
        if i[0] == msgid - 7:
            items = i
        if i[0] == msgid - 8:
            items = i
        if i[0] == msgid - 9:
            items = i
        if i[0] == msgid - 10:
            items = i
        if i[0] == msgid - 11:
            items = i
        if i[0] == msgid - 12:
            items = i
        if i[0] == msgid - 13:
            items = i
    return items


@rout.callback_query()
async def vote_callback(callback: types.CallbackQuery):
    db.commit()
    if callback.data == "accept": 
        try:
            items = await find_cont(callback)
            contid = items[0]
            media1 = MediaGroupBuilder(caption=f"–ö–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–µ–¥–ª–æ–∂–∫–∏ –æ—Ç {items[4]}{items[3]}\n\n–ü—Ä–µ–¥–ª–æ–∂–∫–∞ –¥–ª—è –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ–∫ - @TeloPodpischicybot")
            try:
                cur.execute(f"SELECT photo FROM save_content WHERE id = {contid}")
                items = cur.fetchall()
                for i in items:
                    if i == None:
                        pass
                    else:
                        media1.add_photo(media=i[0])
            except:
                pass
            try:
                cur.execute(f"SELECT video FROM save_content WHERE id = {contid} ORDER BY video DESC")
                items = cur.fetchall()
                for i in items:
                    if i[0] == None:
                        pass
                    else:
                        media1.add_video(media=i[0])
            except:
                pass
            cur.execute(f"DELETE FROM `save_content` WHERE id = '{contid}'")
            db.commit()
            await Bot.send_media_group(media=media1.build(), chat_id=config.channel)
            await Bot.edit_message_text(text=f'@{callback.from_user.username} –∫–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ—â–µ–Ω',
                                        chat_id=config.predloga, message_id=callback.message.message_id)
        except:
            await Bot.send_message(text=f'–ù–∞–ø–∏—à–∏ —Å–µ–Ω–µ —è –ø–æ –ø–∏–∑–¥–µ –ø–æ—à–µ–ª', chat_id=config.predloga)
    if callback.data == "deny":
        try:
            items = await find_cont(callback)
            contid = items[0]
            cur.execute(f"SELECT * FROM save_content WHERE id = {contid}")
            items = cur.fetchall()
            for i in items:
                cur.execute(f"DELETE FROM `save_content` WHERE id = '{contid}'")
            db.commit()
            await Bot.edit_message_text(text=f'@{callback.from_user.username} –∫–æ–Ω—Ç–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ –ø–æ—à–µ–ª –Ω–∞—Ö—É–π',
                                        chat_id=config.predloga, message_id=callback.message.message_id)
        except:
            await Bot.send_message(text=f'–ù–∞–ø–∏—à–∏ —Å–µ–Ω–µ —è –ø–æ –ø–∏–∑–¥–µ –ø–æ—à–µ–ª', chat_id=config.predloga)
    if callback.data == "cool":
        await Bot.edit_message_text(text=f'@{callback.from_user.username} —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!\n',
                                    chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        await Bot.send_message(text=f'@{callback.from_user.username}({callback.from_user.id}) –Ω–∞–º –ø–æ—Å—Ç–∞–≤–∏–ª üëç!!!',chat_id=config.predloga)
    if callback.data == "bad":
        await Bot.edit_message_text(text=f'@{callback.from_user.username} —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!\n\n–ï—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ –Ω–∞–ø–∏—à–∏ –µ–º—É @Iydihdihc8t —á—Ç–æ —Ç–µ–±–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è.',
                                    chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        await Bot.send_message(text=f'@{callback.from_user.username}({callback.from_user.id}) –Ω–∞–º –ø–æ—Å—Ç–∞–≤–∏–ª üëé!!!', chat_id=config.predloga)
    if callback.data == "anon":
        try:
            anon = 'Anonymous'
            cur.execute(f"SELECT caption FROM content WHERE users = '{callback.from_user.id}' ORDER BY caption DESC")
            caption = cur.fetchone()[0]
            print(caption)
            if caption == None:
                caption = ''
            if str(caption):
                caption = f'\n\nC–æ–æ–±—â–µ–Ω–∏–µ - {caption}'
            media = MediaGroupBuilder(caption=f"–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç nick - @{callback.from_user.username}, id - {callback.from_user.id}{caption}")
            cur.execute(f"SELECT photo FROM content WHERE users = '{callback.from_user.id}' ORDER BY photo DESC")
            photo = cur.fetchall()
            try:
                for i in photo:
                        media.add_photo(media=i[0])
                        cur.execute(f"INSERT INTO save_content (id, photo, caption, typepost) VALUES (?, ?, ?, ?)",
                                    (callback.message.message_id, i[0], caption, anon))
            except:
                pass
            try:
                cur.execute(f"SELECT video FROM content WHERE users = '{callback.from_user.id}' ORDER BY video DESC")
                video = cur.fetchall()
                for i in video:
                        media.add_video(media=i[0])
                        cur.execute(f"INSERT INTO save_content (id, video, caption, typepost) VALUES (?, ?, ?, ?)",
                                    (callback.message.message_id, i[0], caption, anon))
            except:
                pass
            cur.execute(f"DELETE FROM content WHERE users = '{callback.from_user.id}'") 
            db.commit()
            await last_msg(callback)
            await Bot.send_media_group(media=media.build(), chat_id=config.predloga)
            await Bot.send_message(text=f'–ü–æ—Å—Ç–∏–º —Ñ–æ—Ç–æ –≤—ã—à–µ –∏–ª–∏ –Ω–µ—Ç?',
                                   chat_id=config.predloga, parse_mode=ParseMode.HTML, reply_markup=Inlinekbord.solution())        
        except:
            await Bot.send_message(text=f'–ë–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª, –µ—Å–ª–∏ —Ç—ã —á—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª, –Ω–æ –±–æ—Ç —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–∏—Ç –ø–∏—à–∏ @Iydihdihc8t',
                                   chat_id=callback.message.chat.id, reply_markup=ReplyKeyboardRemove())
    if callback.data == "noanon":
        try:
            cur.execute(f"SELECT caption FROM content WHERE users = '{callback.from_user.id}' ORDER BY caption DESC")
            caption = cur.fetchone()[0]
            print(caption)
            if caption == None:
                caption = ''
            if caption == str:
                caption = '\n\nC–æ–æ–±—â–µ–Ω–∏–µ - '+caption
            media = MediaGroupBuilder(caption=f"–ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç nick - @ {callback.from_user.username}, id - {callback.from_user.id}\n\nC–æ–æ–±—â–µ–Ω–∏–µ - {caption}")
            cur.execute(f"SELECT photo FROM content WHERE users = '{callback.from_user.id}' ORDER BY photo DESC")
            photo = cur.fetchall()
            try:
                for i in photo:
                        media.add_photo(media=i[0])
                        cur.execute(f"INSERT INTO save_content (id, photo, caption, typepost) VALUES (?, ?, ?, ?)",
                                    (callback.message.message_id, i[0], caption, '@' + callback.from_user.username))
            except:
                pass
            try:
                cur.execute(f"SELECT video FROM content WHERE users = '{callback.from_user.id}' ORDER BY video DESC")
                video = cur.fetchall()
                for i in video:
                        media.add_video(media=i[0])
                        cur.execute(f"INSERT INTO save_content (`id`, `video`, caption) VALUES (?, ?, ?)",
                                    (callback.message.message_id, i[0], caption, '@' + callback.from_user.username))
            except:
                pass
            cur.execute(f"DELETE FROM content WHERE users = '{callback.from_user.id}'") 
            db.commit()
            await last_msg(callback)
            await Bot.send_media_group(media=media.build(), chat_id=config.predloga)
            await Bot.send_message(text=f'–ü–æ—Å—Ç–∏–º —Ñ–æ—Ç–æ –≤—ã—à–µ –∏–ª–∏ –Ω–µ—Ç?', chat_id=config.predloga, parse_mode=ParseMode.HTML, reply_markup=Inlinekbord.solution())  
        except:
            await Bot.send_message(text=f'–ë–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç —Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª, –µ—Å–ª–∏ —Ç—ã —á—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª, –Ω–æ –±–æ—Ç —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–∏—Ç –ø–∏—à–∏ @Iydihdihc8t',
                                         chat_id=callback.message.chat.id, reply_markup=ReplyKeyboardRemove())
    if callback.data == 'sendpart':
        cur.execute(f"SELECT * FROM partner WHERE id = '{callback.from_user.id}' ORDER BY caption DESC")
        items = cur.fetchone()
        cur.execute(f"INSERT INTO save_partner (`id`, chatid, caption, username) VALUES (?, ?, ?, ?)",
                    (callback.message.message_id, items[0], items[1], callback.from_user.username))
        cur.execute(f"DELETE FROM partner WHERE id = '{items[0]}'")
        await Bot.edit_message_text(text='–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É, –æ–∂–∏–¥–∞–π –æ—Ç–≤–µ—Ç–∞, –æ–Ω –ø—Ä–∏–¥–µ—Ç —Å—é–¥–∞.',
                                    chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        await Bot.send_message(text=f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç @{callback.from_user.username}\n\n–°–æ–¥–µ—Ä–∂–∏–º–æ–µ - {items[1]}',
                               chat_id=config.advert, parse_mode=ParseMode.HTML, reply_markup=Inlinekbord.solution_partner())
        db.commit()
    if callback.data == 'delete':
        await Bot.edit_message_text(text='–ñ–∞–ª—å –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ —è —É–¥–∞–ª–∏–ª —Ç–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.',
                                    chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        cur.execute(f"DELETE FROM partner WHERE id = '{callback.from_user.id}'")
        db.commit()
    if callback.data == 'cancel':
        await Bot.delete_message(chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        await us_command.help(callback.message)
        cur.execute(f"DELETE FROM partner WHERE id = '{callback.from_user.id}'")
        db.commit()
    if callback.data == 'partaccept':
        items = await find_messager(callback)
        contid = items[0]
        cur.execute(f"SELECT * FROM save_partner WHERE id = '{contid}' ORDER BY caption DESC")
        items = cur.fetchone()
        cur.execute(f"DELETE FROM save_partner WHERE chatid = '{items[1]}'")
        cur.execute(f"INSERT INTO messages (acceptid, userid) VALUES (?, ?)", (callback.from_user.id, items[1]))
        db.commit()
        await Bot.edit_message_text(text=f'@{callback.from_user.username} –ø—Ä–∏–Ω—è–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç @{items[3]}\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - {items[2]}\n\n@TeloPodpischicybot —Ç–∞–º –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è c @{items[3]}.', message_id=callback.message.message_id, chat_id=config.advert)
        await Bot.send_message(text='–í—Å–µ —á—Ç–æ —Ç—ã —Å—é–¥–∞ –Ω–∞–ø–∏—à–µ—à—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.', chat_id=callback.from_user.id, reply_markup=kbord.cancel())
        await Bot.send_message(text='–í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ –∞–¥–º–∏–Ω–∞.', chat_id=items[1], reply_markup=kbord.cancel())
    if callback.data == 'partdeny':
        items = await find_messager(callback)
        contid = items[0]
        cur.execute(f"SELECT * FROM save_partner WHERE id = '{contid}' ORDER BY caption DESC")
        items = cur.fetchone()
        print(items)
        await Bot.edit_message_text(text=f'@{callback.from_user.username} –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç - @{items[3]}\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - {items[2]}',
                                    chat_id=callback.message.chat.id, message_id=callback.message.message_id)
        await Bot.send_message(chat_id=items[1], text='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–∫–ª–æ–Ω–∏–ª –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ')
        cur.execute(f"DELETE FROM save_partner WHERE chatid = '{items[1]}'")
        db.commit()